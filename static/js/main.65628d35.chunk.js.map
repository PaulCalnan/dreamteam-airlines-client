{"version":3,"sources":["components/SignupForm.js","components/Home.js","components/DisplayFlightsV2.js","components/FlightsSearch.js","components/SeatMap.js","components/FlightInfo.js","components/UserInfo.js","components/ReservationStatus.js","components/ExistingRes.js","components/ReservationForm.js","components/Container.js","components/App.js","Routes.js","registerServiceWorker.js","index.js"],"names":["SignupForm","props","state","username","password","onChange","bind","onSubmit","e","this","setState","target","name","value","ghUrl","preventDefault","window","location","href","className","type","Component","Home","src","alt","DisplayFlightsV2","_handleClick","flight_id","passFlightId","_update","flights_all","map","s","origin","destination","date","number","onClick","id","SearchForm","handleChange1","handleChange2","handleSubmit","event","passResetFlightId","FlightsSearch","saveFlightId","storeFlightId","resetFlightId","flights","fetchPlanes","q1","q2","axios","get","then","results","array_flights","i","data","length","push","Seat","checkIfTaken","takenSeats","indexOf","seatId","isTaken","getSelectedSeat","isSelected","selectedSeat","SeatMap","passSeat","Array","rows","String","fromCharCode","columns","j","FlightInfo","flightNumber","UserInfo","userName","ReservationStatus","status","ExistingRes","res_id","array_res","delete","Object","keys","res","fio","reservations","flight","seat","SubmitComplex","ReservationForm","saveSelected","addNewRes","post","reservation","user_id","user","response","statusText","catch","error","message","flightId","fetchFlight","console","log","slice","r","setTimeout","fetchUser","Container","prev_flight_id","clicking","toUpperCase","App","pathname","substring","Routes","exact","path","component","render","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.65628d35.chunk.js","sourcesContent":["import React, {PureComponent as Component} from 'react';\n\n\nclass SignupForm extends Component{\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    }\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange (e){\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  onSubmit(e){\n    const ghUrl = \"https://paulcalnan.github.io/dreamteam-airlines-client/\"; \n    e.preventDefault();\n    if (this.state.password === \"chicken\")\n    {\n        if (this.state.username === \"Sam Gelwyn\")\n        {\n          window.location.href = `${ghUrl}/#/Sam Gelwyn`;\n        }\n\n        if (this.state.username === \"Joel Turnbull\")\n        {\n          window.location.href = `${ghUrl}/#/Joel Turnbull`;\n        }\n\n    }\n\n    else {\n      window.location.href = ghUrl;\n    }\n\n  }\n\n\n  render(){\n    return (\n      <form onSubmit = {this.onSubmit} className=\"login\" >\n        <div className=\"login-field\">\n        <label className=\"login-label\">Username</label>\n        <input\n          className=\"search-user\"\n          value = {this.state.username}\n          onChange = {this.onChange}\n          type = \"text\"\n          name = \"username\"\n        />\n        </div>\n\n        <div className=\"login-field\">\n        <label className=\"login-label\">Password</label>\n        <input\n          className=\"search-user\"\n          value = {this.state.password}\n          onChange = {this.onChange}\n          type = \"password\"\n          name = \"password\"\n        />\n        </div>\n\n        <div>\n          <button className=\"res-button login-button\">\n           Sign In\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, {PureComponent as Component} from 'react';\nimport SignupForm from './SignupForm'\n\nclass Home extends Component{\n\n  render(){\n    return (\n      <div className=\"login-form\">\n        <div className=\"flex-header\">\n          <div className=\"flex-1\">\n            <h1 className=\"logo login-logo\">DREAMTEAM AIRLINES</h1>\n            <h2 className=\"welcome\">Who arrives... Wins</h2>\n          </div>\n          <div className=\"flex-1\">\n            <img src=\"https://i.imgur.com/SeT47JK.jpg\" alt=\"Sam\"/>\n          </div>\n        </div>\n        <p>Have an account? Please login below.</p>\n        <SignupForm />\n        <p>Have a complaint? call 1800 DREAM and ask for David.</p>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","\nimport React, { PureComponent as Component } from 'react';\n\nclass DisplayFlightsV2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {flight_id: \"\"};\n    this._update = this._update.bind(this);\n  }\n  _update(flight_id)\n  {\n      this.setState({flight_id});\n  }\n\n  _handleClick = (flight_id) => {\n    this.props.passFlightId( flight_id );\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Our available flights shown below.</p>\n        {this.props.flights_all.map (s=>\n          <p key={s.id}>{s.origin} to {s.destination} on {s.date}: Flight&nbsp;{s.number}\n          <button className=\"res-button book\" onClick = { () => { this._handleClick(s.id) } }>\n            Book Flight\n          </button></p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DisplayFlightsV2;\n","import React, { PureComponent as Component } from 'react';\nimport axios from 'axios';\nimport DisplayFlightsV2 from './DisplayFlightsV2';\n\n\nconst PlaneURL = 'https://dreamteam-airlines.herokuapp.com/flights.json';\n\n// ****** Child ***************************************************************\nclass SearchForm extends Component{\n\n  constructor(){\n\n    super();\n    this.state = {\n      origin: '',\n      destination: ''\n    };\n\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleChange1(e) {\n    this.setState({origin: e.target.value});\n  }\n\n  handleChange2(e) {\n    this.setState( { destination: e.target.value } );\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onSubmit(this.state.origin,this.state.destination);\n    this.props.passResetFlightId();\n  }\n\n  render(){\n    return (\n      <form onSubmit={ this.handleSubmit }>\n\n        <label className = \"search\"><span className =\"monospace\">\n          Origin: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span>\n          <select value={this.state.origin} onChange = {this.handleChange1} className=\"select-city\">\n            <option value=\"\">Select...</option>\n            <option value=\"Sydney\">Sydney</option>\n            <option value=\"Brisbane\">Brisbane</option>\n          </select>\n        </label><br />\n\n        <label className = \"search\"><span className =\"monospace\">\n          Destination: &nbsp; &nbsp; &nbsp;</span>\n          <select value={this.state.destination} onChange = {this.handleChange2} className=\"select-city\">\n            <option value=\"\">Select...</option>\n            <option value=\"Perth\">Perth</option>\n            <option value=\"Melbourne\">Melbourne</option>\n          </select>\n        </label><br />\n\n\n        <input type=\"submit\" value=\"Search\" className=\"res-button\" />\n      </form>\n    );\n  }\n}\n\n\n// ************ PARENT: FLIGHT SEARCH ******************************************\n\nclass FlightsSearch extends Component{\n\n    constructor(props){\n      super(props);\n      this.state = {\n        flights: [],\n        flight_id: \"\"\n      };\n      this.fetchPlanes = this.fetchPlanes.bind(this);\n    }\n\n    saveFlightId = (s) => {\n      this.setState({\n        flight_id: s\n      });\n      this.props.storeFlightId(s);\n    }\n\n\n\n    fetchPlanes(q1,q2){\n\n      axios.get(PlaneURL).then(function (results){\n        let array_flights = [];\n        for (let i =0;i<results.data.length;i++)\n          if (results.data[i].origin === q1 && results.data[i].destination === q2)\n            array_flights.push(results.data[i]);\n        this.setState({flights : array_flights});\n      }.bind(this));\n\n    }\n\n    passResetFlightId = () => {\n      this.props.resetFlightId();\n    }\n\n    render() {\n      return (\n        <div>\n          <SearchForm onSubmit = {this.fetchPlanes} passResetFlightId={ this.passResetFlightId } />\n          <DisplayFlightsV2 flights_all={ this.state.flights } passFlightId={ this.saveFlightId } />\n        </div>\n      );\n  }\n\n}\n\n\nexport default FlightsSearch;\n","import React, { PureComponent as Component } from 'react';\n\n\n// ********** Child SEAT *******************************************************\n\nclass Seat extends Component {\n  checkIfTaken = () => {\n    if ( this.props.takenSeats.indexOf( this.props.seatId ) !== -1 ) { // if this seat is taken\n      this.setState({\n        isTaken: true\n      });\n    } else {\n      this.setState({\n        isTaken: false\n      });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTaken: false,\n      // isSelected: false\n    };\n  }\n\n  componentDidUpdate() {\n    this.checkIfTaken();\n  }\n\n  _handleClick = (e) => {\n    // console.log( this.props.seatId );\n    this.props.getSelectedSeat( this.props.seatId );\n    this.setState({\n      isSelected: true\n    });\n\n  }\n\n  render() {\n    // console.log( this.props.selectedSeat );\n    return (\n      <div className={ this.state.isTaken ? \"seat taken\" : \"seat free\" } onClick={ this._handleClick } >\n        <div className={ this.props.selectedSeat === this.props.seatId && !this.state.isTaken ? \"selected\" : null } >\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// ****************************  Parent SEAT MAP *******************************\n\n\nclass SeatMap extends Component {\n  getSelectedSeat = (s) => {\n    this.setState({\n      selectedSeat: s\n    });\n    this.props.passSeat(s);\n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSeat: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Seat Map</h2>\n        <p>Please choose an available seat</p>\n        <div className=\"grid-container\" >\n          {/* make a row for number of rows */}\n          { [...Array(this.props.rows)].map((e, i) =>\n            <div className=\"grid-row\" key={i}>\n              {/* row letter */}\n              <span className=\"row-num\">{ String.fromCharCode(i+65) }</span>\n              {/*  make seat re num of cols */}\n              { [...Array(this.props.columns)].map((e, j) =>\n                <Seat\n                  key={`${String.fromCharCode(i+65)}${j+1}`}\n                  seatId={`${String.fromCharCode(i+65)}${j+1}`}\n                  takenSeats={ this.props.takenSeats }\n                  getSelectedSeat={ this.getSelectedSeat }\n                  selectedSeat={ this.state.selectedSeat }\n                />\n              ) }\n            </div>\n          ) }\n        </div>\n        <p>Selected Seat: { this.state.selectedSeat }</p>\n      </div>\n    );\n  }\n}\n\nexport default SeatMap;\n","\nimport React from 'react';\n\nfunction FlightInfo (props) {\n  return (\n    <div>\n      Flight Number: { props.flightNumber }\n    </div>\n  );\n}\n\nexport default FlightInfo;\n","// import React, { PureComponent as Component } from 'react';\nimport React from 'react';\n\nfunction UserInfo (props) {\n  return (\n    <div>\n      Passenger Name: { props.userName }\n    </div>\n  );\n}\n\nexport default UserInfo;\n","// import React, { PureComponent as Component } from 'react';\nimport React from 'react';\n\nfunction ReservationStatus(props) {\n    return (\n      <div className=\"res-status\">\n        { props.status }\n      </div>\n    );\n}\n\nexport default ReservationStatus;\n","import React, { PureComponent as Component } from 'react';\nimport axios from 'axios';\n\nclass ExistingRes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\"\n    }\n  }\n\n  _handleClick = (res_id,array_res) => {\n    axios.delete(`https://dreamteam-airlines.herokuapp.com/reservations/${res_id.id}`).then(\n        this.setState({\n          status: \"Reservation successfully cancelled.\"\n        })\n    );\n\n\n\n  }\n\n\n  render() {\n\n    if (Object.keys(this.props.res).length!== 0){\n\n      let fio= this.props.res.reservations;\n      if (fio.length > 0){\n        return (\n          <div>\n            <p>MY RESERVATIONS</p>\n            {fio.map (s=>\n              <div key={s.id} className=\"flex-container\">\n                <div className=\"flight-details\">{s.flight.date} Flight {s.flight.number} - {s.flight.origin} to {s.flight.destination}, Seat {s.seat}    </div>\n                <button className=\"res-button book cancel flex-1\" onClick = { () => { this._handleClick(s,fio) } }>Cancel Reservation</button>\n              </div>\n\n            )}\n            <p className=\"res-status\">{this.state.status}</p>\n          </div>\n        );\n      }\n      else {\n        return(\n          <div>No current reservations</div>\n        );\n      }\n    }\n    else {\n\n      return (\n        <div>No current reservations</div>\n      )\n    }\n  }\n}\n\nexport default ExistingRes;\n","import React, { PureComponent as Component } from 'react';\nimport SeatMap from './SeatMap';\nimport FlightInfo from './FlightInfo';\nimport UserInfo from './UserInfo';\nimport ReservationStatus from './ReservationStatus';\nimport ExistingRes from './ExistingRes';\n\nimport axios from 'axios';\n\n\nclass SubmitComplex extends Component {\n  render() {\n    return (\n      <div>\n        <button className=\"res-button\" onClick={ this.props.onClick }>Book</button>\n      </div>\n    );\n  }\n}\n\n// <Display />\n// <ReservationForm className={ ...hidden } flight={ this.state.flight_id } user={ this.state.user_id } } />\n\n// PARENT\n\nclass ReservationForm extends Component {\n  saveSelected = (s) => {\n    this.setState({\n      selectedSeat: s\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      flight_id: props.flightId,\n      flight: {},\n      user: {},\n      takenSeats: [],\n      selectedSeat: \"\",\n      status: \"\"\n    };\n    const fetchFlight = (id) => {\n       console.log( id );\n      axios.get(`https://dreamteam-airlines.herokuapp.com/flights/${ id }.json`)\n        .then( results => {\n           this.setState({ flight: results.data })\n          })\n        .then( () => {\n          const reservations = this.state.flight.reservations.slice();\n          const takenSeats = reservations.map(r => r.seat);\n          // console.log('Taken seats on this flight: ', takenSeats);\n          this.setState({ takenSeats });\n        });\n      setTimeout( () => { fetchFlight( this.state.flight_id ) }, 1000 );\n      // setTimeout( function() { fetchFlight( this.state.flight_id ) }, 3000 );\n    }\n    const fetchUser = () => {\n      axios.get(`https://dreamteam-airlines.herokuapp.com/users/${ props.user_id }.json`)\n        .then( results => this.setState({ user: results.data }) );\n      setTimeout( fetchUser, 1000 );\n    }\n    fetchFlight( this.state.flight_id );\n    fetchUser();\n  }\n\n  componentDidUpdate() {\n    this.setState({\n      flight_id: this.props.flightId\n    });\n  }\n\n\n  addNewRes = () => {\n    axios.post(\n      'https://dreamteam-airlines.herokuapp.com/reservations.json',\n      {\n        reservation: {\n          seat: this.state.selectedSeat,\n          flight_id: this.state.flight.id,\n          user_id: this.state.user.id\n        }\n      }\n    )\n    .then(response => {\n      // console.log( response.statusText === \"Created\" ? \"Reservation complete. Thank you for choosing Dreamteam.\" : \"\" );\n      this.setState({\n        status: response.statusText === \"Created\" ? \"Reservation complete. Thank you for choosing Dreamteam.\" : \"\"\n      });\n    })\n    .catch(error => {\n      // console.log( error.message === \"Request failed with status code 422\" ? \"Sorry, that seat is unavailable.\" : \"\" );\n      this.setState({\n        status: error.message === \"Request failed with status code 422\" ? \"Sorry, that seat is unavailable. Please choose an available seat or call David for assistance.\" : \"\"\n      });\n    })\n\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h1>Make a reservation</h1>\n        <UserInfo userName={ this.state.user.name } />\n        <FlightInfo flightNumber={ this.state.flight.number } flightId={ this.state.flight.id } />\n        <SeatMap rows={ this.state.flight.rows } columns={ this.state.flight.columns } takenSeats={ this.state.takenSeats } passSeat={ this.saveSelected } />\n        <SubmitComplex onClick={ this.addNewRes } />\n        <ReservationStatus status={ this.state.status } />\n        {/* <ExistingRes res={ this.state.user } /> */}\n        { this.state.user === {} ? <ExistingRes res={ this.state.user } /> : null }\n        {/* { this.state.flight_id !== '' ? <ReservationForm flightId={ this.state.flight_id } /> : null } */}\n      </div>\n    );\n  }\n}\n\n\nexport default ReservationForm;\n","import React, { PureComponent as Component } from 'react';\nimport FlightsSearch from './FlightsSearch';\nimport ReservationForm from './ReservationForm';\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flight_id: '',\n      prev_flight_id: '',\n      username: props.username\n    }\n  }\n\n  resetFlightId = () => {\n    this.setState({\n      flight_id: ''\n    });\n  }\n\n  storeFlightId = (flight_id) => {\n    this.setState({\n      prev_flight_id: this.state.flight_id,\n      flight_id: flight_id\n    });\n  }\n\n  clicking(e){\n    e.preventDefault();\n     window.location.href = \"https://paulcalnan.github.io/dreamteam-airlines-client/\";\n    \n  }\n\n\n  render() {\n        return (\n          <div>\n\n          <form onSubmit = {this.clicking} className=\"logout\">\n            <div className=\"flex-header\">\n              <div className=\"flex-1\">\n                <p>WELCOME {this.state.username.toUpperCase() }</p>\n                <p>Search for a flight</p>\n              </div>\n              <div className=\"flex-logout\">\n                <button className=\"res-button logout-button\">\n                  Sign Out\n                </button>\n              </div>\n            </div>\n          </form>\n\n            <FlightsSearch storeFlightId={ this.storeFlightId } resetFlightId={ this.resetFlightId } />\n            { this.state.flight_id !== '' ? <ReservationForm user_id={this.props.user_id} flightId={ this.state.flight_id } /> : null }\n          </div>\n        );\n\n  }\n}\n\nexport default Container;\n","import React, { Component } from 'react';\nimport Container from './Container';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: props.location.pathname.substring(1)\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header header-flights flex-header\">\n          <div className=\"flex-1\">\n            <h1 className=\"logo\">DREAMTEAM AIRLINES</h1>\n          </div>\n          <div className=\"flex-1\">\n            <img src=\"https://i.imgur.com/SeT47JK.jpg\" alt=\"Sam\"/>\n          </div>\n        </div>\n        {/* <p>Search for a flight right here</p> */}\n        <Container user_id={this.props.user_id} username={this.state.username} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport App from './components/App';\n\n\nconst Routes = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component = {Home} />\n      <Route exact path=\"/Joel Turnbull\" render={props => <App user_id=\"7\" {...props} />} />\n      <Route exact path=\"/Sam Gelwyn\" render={props => <App user_id=\"8\" {...props} />} />\n    </div>\n  </Router>\n)\n\nexport default Routes;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './components/App';\n// import registerServiceWorker from './registerServiceWorker';\nimport Routes from './Routes';\n\nimport { unregister } from './registerServiceWorker';\nunregister();\n\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(Routes, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}